(()=>{"use strict";class t{constructor(t,e=0){this.length=t,this.hits=e,this.sunk=!1}hit(){this.hits+=1}isSunk(){return this.hits>=this.length&&(this.sunk=!0,this.sunk)}}class e{constructor(){this.board=this.initialiseBoard(),this.hitMap=new Set}initialiseBoard(){const t=[];for(let e=0;e<10;e++)t.push(new Array(10).fill(null));return t}placeShip(e,r,i){const[s,h]=e,a=new t(i);if(!this.isValidPlacement(e,r,i))return!1;if("H"===r){for(let t=0;t<i;t++)this.board[s+t][h]=a;return!0}if("V"===r){for(let t=0;t<i;t++)this.board[s][h+t]=a;return!0}}isValidPlacement(t,e,r){const[i,s]=t;if("H"===e){for(let t=0;t<r;t++)if(i+t>=10||this.board[i+t][s])return!1}else for(let t=0;t<r;t++)if(s+t>=10||this.board[i][s+t])return!1;return this.areaClear(i,s,e,r)}areaClear(t,e,r,i){const s=Math.max(t-1,0);let h=Math.min(t+i,9);const a=Math.max(e-1,0);let o=Math.min(e+1,9);"V"===r&&(o=Math.min(e+i,9),h=Math.min(t+1,9));for(let t=s;t<=h;t++)for(let e=a;e<=o;e++)if(this.board[t][e])return!1;return!0}receiveAttack(t){const[e,r]=t;return!(this.hitMap.has(`${e}${r}`)||(this.hitMap.add(`${e}${r}`),!this.board[e][r]))&&(this.board[e][r].hit(),this.board[e][r].isSunk(),"hit")}}(new class{constructor(){this.playerBoard=new e,this.computerBoard=new e,this.playerShips=[],this.computerShips=[],this.queue=[],this.shipLengths=[2,2,3,4,4]}playerTurn(t,e){return setTimeout((()=>{this.computerTurn()}),100),this.computerBoard.receiveAttack([t,e]),this.checkWinner()}enqueueNeighbours(t,e,r=void 0,i=void 0){if(void 0!==i&&void 0!==i){const s=[t+t-r,e+e-i];return this.queue=[],this.queue.push({coords:s,last:[t,e]}),"hit"}const s=t+1,h=t-1,a=e+1,o=e-1;return a<10&&!this.playerBoard.hitMap.has(`${t}${a}`)&&this.queue.push({coords:[t,a],last:[t,e]}),o>=0&&!this.playerBoard.hitMap.has(`${t}${o}`)&&this.queue.push({coords:[t,o],last:[t,e]}),s<10&&!this.playerBoard.hitMap.has(`${s}${e}`)&&this.queue.push({coords:[s,e],last:[t,e]}),h>=0&&!this.playerBoard.hitMap.has(`${h}${e}`)&&this.queue.push({coords:[h,e],last:[t,e]}),"hit"}computerTurn(t=void 0,e=void 0,r=100){let i=Math.floor(9*Math.random()),s=Math.floor(9*Math.random());if(!(r<=0)){if(void 0!==t&&void 0!==e)return this.playerBoard.receiveAttack([t,e])&&this.enqueueNeighbours(t,e),this.checkWinner();if(this.queue.length>0){const t=this.queue.shift();[i,s]=t.coords;const[e,r]=t.last;return this.playerBoard.receiveAttack([i,s])&&this.enqueueNeighbours(i,s,e,r),this.checkWinner()}return this.playerBoard.hitMap.has(`${i}${s}`)?(this.computerTurn(r-1),this.checkWinner()):(this.playerBoard.receiveAttack([i,s])&&this.enqueueNeighbours(i,s),this.checkWinner())}}initializeBoards(){for(let t=0;t<this.shipLengths.length;t++){let e,r,i=!1;for(;!i;)e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),this.playerBoard.isValidPlacement([e,r],"H",this.shipLengths[t])&&(i=this.playerBoard.placeShip([e,r],"H",this.shipLengths[t]));for(this.playerShips.push(this.playerBoard.board[e][r]),i=!1;!i;)e=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),this.computerBoard.isValidPlacement([e,r],"V",this.shipLengths[t])&&(i=this.computerBoard.placeShip([e,r],"V",this.shipLengths[t]));this.computerShips.push(this.computerBoard.board[e][r])}}checkWinner(){let t=0,e=0;return this.refreshGrid(),this.playerShips.forEach((e=>{!0===e.sunk&&t++})),t>=this.playerShips.length?"Computer won":(this.computerShips.forEach((t=>{!0===t.sunk&&e++})),e>=this.computerShips.length?"playerWon":"next Turn")}initializeGrid(){this.initializeBoards();const t=document.querySelector("#player-board"),e=document.querySelector("#computer-board");for(let r=0;r<10;r++)for(let i=0;i<10;i++){const s=document.createElement("div"),h=document.createElement("div");s.classList="square player-square",h.classList="square computer-square",this.playerBoard.board[r][i]&&s.setAttribute("id","ship"),this.computerBoard.board[r][i]&&h.setAttribute("id","ship"),h.addEventListener("click",(()=>{this.playerTurn(i,r)})),t.appendChild(s),e.appendChild(h)}}refreshGrid(){const t=document.querySelectorAll(".computer-square"),e=document.querySelectorAll(".player-square");t.forEach(((t,e)=>{const r=e%10,i=Math.floor(e/10);this.computerBoard.hitMap.has(`${r}${i}`)&&t.classList.add("hit")})),e.forEach(((t,e)=>{const r=e%10,i=Math.floor(e/10);this.playerBoard.hitMap.has(`${r}${i}`)&&t.classList.add("hit")}))}}).initializeGrid()})();